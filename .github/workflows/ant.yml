name: Build and Release Java Application

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Install Apache Ant
      run: sudo apt-get install ant -y

    - name: Build JAR with Ant
      run: ant dist

    - name: Install GraalVM
      run: |
        curl -L -o graalvm.tar.gz https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-<version>/graalvm-ce-java11-linux-amd64-21.3.3.1.tar.gz
        tar -xzf graalvm.tar.gz
        export GRAALVM_HOME=$PWD/graalvm-ce-java11-21.3.3.1
        export PATH=$GRAALVM_HOME/bin:$PATH

    - name: Build Native Executable
      run: |
        gu install native-image
        cd your_project_directory
        native-image -jar your_jar_file.jar your_executable_name
        mv your_executable_name /path/to/destination/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0  # Укажите тег, который вы хотите присвоить этому релизу
        release_name: Release v1.0.0  # Имя релиза
        draft: false  # Установите значение true, чтобы сделать релиз черновиком
        prerelease: false  # Установите значение true, чтобы сделать релиз предварительным

    - name: Upload JAR Release Asset
      id: upload_jar_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/distr/l2walker.jar  # Путь к вашему JAR файлу
        asset_name: l2walker.jar  # Имя актива
        asset_content_type: application/java-archive

    - name: Upload EXE Release Asset
      id: upload_exe_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /path/to/destination/your_executable_name  # Путь к вашему исполняемому файлу
        asset_name: your_executable_name  # Имя актива
        asset_content_type: application/octet-stream
